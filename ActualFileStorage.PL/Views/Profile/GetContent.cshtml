@model ActualFileStorage.PL.Models.ObjectsViewModel

<script>
    $(document).ready(function () {
        document.getElementById("removeFile").disabled = true;
        document.getElementById("removeFolder").disabled = true;
        prevHist = hist;
        hist = @Html.Raw(Json.Encode(Model.History));
        constructCrumbs(hist);
        $(".breadcrumb-item").on("click", function (event) {
            clearInfo();
            loadFolder($(event.target).attr("data-id"), hist);
        });

        //delegated event handling to resolve dynamic changes, но тогда должно быть в index.cshtml
        //$(".c-folder").on('click', e => {
        ////$("#contentDiv").on('click', ".c-folder", e => {
        //    toggleSelection(e);
        //}).on('dblclick', e => {
        //    clearInfo();
        //        //console.log("history passed from event: ");
        //    //console.log(hist);
        //    history.pushState({ "history": hist, "userId": defUserId, "folderId": hist[hist.length - 1] }, hist.toString());
        //    loadFolder($(e.target).attr("value"), hist);
        //}).on("mousedown", e => {
        //    if (e.detail > 1)
        //        e.preventDefault();
        //});
        
    });

</script>
<div>
    @foreach (var item in Model.Folders)
    {
        <div class="row">
            @*<div class="col-1" style="display: none;">@Html.DisplayFor(modelItem => item.Id)</div>*@
            <div class="col">
                <span class="c-folder" value="@item.Id">
                    <img src="~/Content/folder-icon.png" width="12" />
                    @Html.DisplayFor(modelItem => item.Name)
                </span>
            </div>
        </div>
    }
    @foreach (var item in Model.Files)
    {

        <div class="row">
            @*<div class="col-1" style="display: none;">@Html.DisplayFor(modelItem => item.Id)</div>*@
            <div class="col"><span class="c-file" value="@item.Id">@Html.DisplayFor(modelItem => item.FullName)</span></div>
        </div>

    }

</div>
