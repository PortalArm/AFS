@model ActualFileStorage.PL.Models.AuthUserViewModel
@*@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")*@
@AjaxHelper.CreateScript("submitAuthButton", "authForm", Url.Action("AuthAjaxForm"), "POST", Url.Action("Index", controllerName: "Adminpanel"))

@{
    string labelClass = "control-label my-auto-height col-4";
    string itemClass = "col-8";
    string groupClass = "form-group row text-left";
}
<div class="offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6">
    @using (Html.BeginForm("AuthAjaxForm", "Auth", FormMethod.Post, new { id = "authForm", @class = "clearfix" }))
    {
        @Html.AntiForgeryToken()
        <h4 class="text-center">Авторизация пользователя</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="@groupClass">
            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = labelClass })
            <div class="@itemClass">
                @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="@groupClass">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = labelClass })
            <div class="@itemClass">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-center">
            <div>
                <input id="submitAuthButton" value="Login" class="btn btn-default" />
            </div>
        </div>
    }
</div>