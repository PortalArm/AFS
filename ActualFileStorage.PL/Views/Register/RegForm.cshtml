@model ActualFileStorage.PL.Models.RegistrationUserViewModel
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@AjaxHelper.CreateScript("submitRegButton", "regForm", Url.Action("RegAjaxForm"), "POST", Url.Action("", controllerName: "Adminpanel"))

@{
    string labelClass = "control-label my-auto-height col-4";
    string itemClass = "col-8";
    string groupClass = "form-group row text-left";
}
<div class="offset-2 col-8 offset-md-3 col-md-6 offset-lg-4 col-lg-4">
    @using (Html.BeginForm("RegAjaxForm", "Register", FormMethod.Post, new { id = "regForm", @class = " clearfix" }))
    {
        @Html.AntiForgeryToken()
            <h4 class="text-center">Регистрация пользователя</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="@groupClass">
                @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = labelClass })
                <div class="@itemClass">
                    @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="@groupClass">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = labelClass })
                <div class="@itemClass">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="@groupClass">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class =labelClass })
                <div class="@itemClass">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="@groupClass">
                @Html.LabelFor(model => model.SecondName, htmlAttributes: new { @class = labelClass })
                <div class="@itemClass">
                    @Html.EditorFor(model => model.SecondName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SecondName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="@groupClass">
                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = labelClass })
                <div class="@itemClass">
                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="@groupClass">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = labelClass })
                <div class="@itemClass">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
                
            <div class="form-group text-center">
                <div class="">
                    <input id="submitRegButton" value="Register" class="btn btn-default" />
                </div>
            </div>
    }
</div>