@model ActualFileStorage.PL.Models.RegistrationUserViewModel
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/Scripts/blockingdivescape.js")
<script>
    $(document).ready(function () {
            $('#submitRegButton').on('click', function () {
                let form = $("#regForm");
                event.preventDefault();
                form.validate();
                if (form.valid())
                    $.ajax({
                        url: "@Url.Action("RegAjaxForm")",
                        method: "POST",
                        data: form.serialize(),
                        success: function (data) {
                            if ($("body > .blocking-div"))
                                $("body > .blocking-div").remove();
                            if (data.status === "ok") {
                                    window.location = "@Url.Action("Index", controllerName: "Adminpanel")";
                                    return;
                            }
                            if (data) {
                                 $("body").prepend("<div class='container-fluid blocking-div'><div class='container'>" + data + "</div>");
                                return;
                            }
                        }
                    });
            })});
</script>
@*@AjaxHelper.CreateScript("submitRegButton", "regForm", Url.Action("RegAjaxForm"), "POST", Url.Action("Index", controllerName: "Adminpanel"))*@
@{
    string labelClass = "control-label my-auto-height col-4";
    string itemClass = "col-8";
    string groupClass = "form-group row text-left";
}
<div class="offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6">
    @using (Html.BeginForm("RegAjaxForm", "Register", FormMethod.Post, new { id = "regForm", @class = "clearfix" }))
    {
        @Html.AntiForgeryToken()
        <h4 class="text-center">Регистрация пользователя</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="@groupClass">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = labelClass })
            <div class="@itemClass">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="@groupClass">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = labelClass })
            <div class="@itemClass">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="@groupClass">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = labelClass })
            <div class="@itemClass">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="@groupClass">
            @Html.LabelFor(model => model.SecondName, htmlAttributes: new { @class = labelClass })
            <div class="@itemClass">
                @Html.EditorFor(model => model.SecondName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SecondName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="@groupClass">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = labelClass })
            <div class="@itemClass">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="@groupClass">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = labelClass })
            <div class="@itemClass">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-center">
            <div>
                <input id="submitRegButton" value="Register" class="btn btn-default" />
            </div>
        </div>
    }
</div>