@model ActualFileStorage.PL.Models.AuthUserViewModel
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@AjaxHelper.CreateScript("submitAuthButton", "authForm", Url.Action("AuthAjaxForm"), "POST", Url.Action("", controllerName: "Adminpanel"))

@{
    string labelClass = "control-label my-auto-height col-4";
    string itemClass = "col-8";
    string groupClass = "form-group row text-left";
}
<div class="offset-2 col-8 offset-md-3 col-md-6 offset-lg-4 col-lg-4">
    @using (Html.BeginForm("AuthAjaxForm", "Auth", FormMethod.Post, new { id = "authForm", @class = "clearfix" }))
    {
        @Html.AntiForgeryToken()
            <h4 class="text-center">Авторизация пользователя</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="@groupClass">
                @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = labelClass })
                <div class="@itemClass">
                    @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="@groupClass">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = labelClass })
                <div class="@itemClass">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
                
            <div class="form-group text-center">
                <div>
                    <input id="submitAuthButton" value="Login" class="btn btn-default" />
                </div>
            </div>
    }
</div>